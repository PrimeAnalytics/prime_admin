<div>
<h3><?php echo $data['db']['table1'][0]['name']?> </h3>
<h4><?php echo $data['db']['table1'][0]['brand']?></h4>
<div class="col-md-8">
<img src="<?php echo $data['db']['table1'][0]['image']?>" style="width:100%;height:400px;">
</div>
<div class="col-md-4">
  <h4>Specifications</h4>
  <table cellpadding="10">
      <tr>
        <td>Price:</td>
        <td>
          <strong>
            <?php echo $data['db']['table1'][0]['price']?>
          </strong>
        </td>
      </tr>
      <tr>
        <td>Class:</td>
        <td>
          <strong>
            <?php echo $data['db']['table1'][0]['class']?>
          </strong>
        </td>
      </tr>
      <tr>
        <td>Power:</td>
        <td>
          <strong>
            <?php echo $data['db']['table1'][0]['power']?>
          </strong>
        </td>
      </tr>
      <tr>
        <td>Engine Capacity (ml):</td>
        <td>
          <strong>
            <?php echo $data['db']['table1'][0]['capacity']?>
          </strong>
        </td>
      </tr>
      <tr>
        <td>Transmission:</td>
        <td>
          <strong>
            <?php echo $data['db']['table1'][0]['transmission']?>
          </strong>
        </td>
      </tr>
      <tr>
        <td>Cylinders:</td>
        <td>
          <strong>
            <?php echo $data['db']['table1'][0]['cylinders']?>
          </strong>
        </td>
      </tr>
      <tr>
        <td>Fuel Type:</td>
        <td>
          <strong>
            <?php echo $data['db']['table1'][0]['fuel']?>
          </strong>
        </td>
      </tr>
  </table>
  

  <h4>In Class Rating</h4>
  <table id="table-sparkline" cellpadding="10">
      <tr>
        <td>Price:</td>
        <td data-sparkline="<?php echo $data['db']['table1'][0]['price_score']?> ; bar"/>
      </tr>
      <tr>
        <td>Power:</td>
        <td data-sparkline="<?php echo $data['db']['table1'][0]['power_score']?> ; bar"/>
      </tr>
      <tr>
        <td>Engine Capacity (ml):</td>
        <td data-sparkline="<?php echo $data['db']['table1'][0]['capacity_score']?> ; bar"/>
      </tr>
      <tr>
        <td>Power Per Liter:</td>
        <td data-sparkline="<?php echo $data['db']['table1'][0]['ppl_score']?> ; bar"/>
      </tr>
      <tr>
        <td>Power Per 1000 (ZAR):</td>
        <td data-sparkline="<?php echo $data['db']['table1'][0]['ppk_score']?> ; bar"/>
      </tr>
  </table>
</div>
</div>


<script>

  $(function () {
  /**
  * Create a constructor for sparklines that takes some sensible defaults and merges in the individual
  * chart options. This function is also available from the jQuery plugin as $(element).highcharts('SparkLine').
  */
  Highcharts.SparkLine = function (options, callback) {
  var defaultOptions = {
  chart: {
  renderTo: (options.chart && options.chart.renderTo) || this,
  backgroundColor: null,
  borderWidth: 0,
  type: 'area',
  margin: [2, 0, 2, 0],
  width: 120,
  height: 20,
  style: {
  overflow: 'visible'
  },
  skipClone: true
  },
  title: {
  text: ''
  },
  credits: {
  enabled: false
  },
  xAxis: {
  labels: {
  enabled: false
  },
  title: {
  text: null
  },
  startOnTick: false,
  endOnTick: false,
  tickPositions: []
  },
  yAxis: {
  max: 1,
  endOnTick: false,
  startOnTick: false,
  labels: {
  enabled: false
  },
  title: {
  text: null
  },
  tickPositions: [0]
  },
  legend: {
  enabled: false
  },
  exporting: {
  enabled: false
  },
  tooltip: {
  enabled: false
  },
  plotOptions: {
  series: {
  animation: false,
  lineWidth: 1,
  shadow: false,
  states: {
  hover: {
  lineWidth: 1
  }
  },
  marker: {
  radius: 1,
  states: {
  hover: {
  radius: 2
  }
  }
  },
  fillOpacity: 0.25
  },
  column: {
  negativeColor: '#910000',
  borderColor: 'silver'
  }
  }
  };
  options = Highcharts.merge(defaultOptions, options);

  return new Highcharts.Chart(options, callback);
  };

  var start = +new Date(),
  $tds = $("td[data-sparkline]"),
  fullLen = $tds.length,
  n = 0;

  // Creating 153 sparkline charts is quite fast in modern browsers, but IE8 and mobile
  // can take some seconds, so we split the input into chunks and apply them in timeouts
  // in order avoid locking up the browser process and allow interaction.
  function doChunk() {
  var time = +new Date(),
  i,
  len = $tds.length,
  $td,
  stringdata,
  arr,
  data,
  chart;

  for (i = 0; i < len; i += 1) {
            $td = $($tds[i]);
            stringdata = $td.data('sparkline');
            arr = stringdata.split('; ');
            data = $.map(arr[0].split(', '), parseFloat);
            chart = {};

            if (arr[1]) {
                chart.type = arr[1];
            }
            $td.highcharts('SparkLine', {
                series: [{
                    data: data,
                    pointStart: 1
                }],
  chart: chart
  });

  n += 1;

  // If the process takes too much time, run a timeout to allow interaction with the browser
  if (new Date() - time > 500) {
  $tds.splice(0, i + 1);
  setTimeout(doChunk, 0);
  break;
  }
  }
  }
  doChunk();

  });

</script>

